{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      usernameError: '',\n      passwordError: '',\n      isLoading: false\n    };\n  },\n  methods: {\n    resetFormErrors() {\n      this.usernameError = '';\n      this.passwordError = '';\n    },\n    handleLogin() {\n      if (this.validateForm()) {\n        this.login();\n      }\n    },\n    validateForm() {\n      let isValid = true;\n      if (!this.username) {\n        this.usernameError = '用户名不能为空';\n        isValid = false;\n      } else {\n        this.usernameError = '';\n      }\n      if (!this.password) {\n        this.passwordError = '密码不能为空';\n        isValid = false;\n      } else {\n        this.passwordError = '';\n      }\n      return isValid;\n    },\n    login() {\n      this.isLoading = true;\n      axios.post(\"http://localhost:8088/login\", {\n        username: this.username,\n        password: this.password\n      }).then(response => {\n        console.log('登录成功', response.data);\n        // 假设这里有一个方法来处理登录成功后的跳转\n        this.$router.push('/main');\n        localStorage.setItem('token', response.data.token);\n      }).catch(error => {\n        console.error('登录失败', error);\n        this.isLoading = false;\n        if (error.response && error.response.status === 401) {\n          this.passwordError = '用户名或密码错误';\n        } else {\n          this.passwordError = '登录失败，请稍后重试';\n        }\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","usernameError","passwordError","isLoading","methods","resetFormErrors","handleLogin","validateForm","login","isValid","post","then","response","console","log","$router","push","localStorage","setItem","token","catch","error","status","finally"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\r\n  <el-container class=\"a1\">\r\n    <el-aside width=\"600px\" style=\"background-color: #f2f2f2; display: flex; justify-content: center; align-items: center;\">\r\n      <div class=\"login-container\">\r\n        <h2 class=\"login-title\">登录</h2>\r\n        <form @submit.prevent=\"handleLogin\">\r\n          <div class=\"form-group\">\r\n            <label for=\"login-username\" class=\"form-label\">用户名:</label>\r\n            <input type=\"text\" id=\"login-username\" v-model=\"username\" placeholder=\"请输入用户名\" :class=\"{ 'is-invalid': usernameError }\">\r\n            <transition name=\"fade\">\r\n              <div v-if=\"usernameError\" class=\"invalid-feedback\">{{ usernameError }}</div>\r\n            </transition>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"login-password\" class=\"form-label\">密码:</label>\r\n            <input type=\"password\" id=\"login-password\" v-model=\"password\" placeholder=\"请输入密码\" :class=\"{ 'is-invalid': passwordError }\">\r\n            <transition name=\"fade\">\r\n              <div v-if=\"passwordError\" class=\"invalid-feedback\">{{ passwordError }}</div>\r\n            </transition>\r\n          </div>\r\n          <button type=\"submit\" class=\"login-submit-btn\" :disabled=\"isLoading\">\r\n            {{ isLoading? '登录中...' : '登录' }}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </el-aside>\r\n    <el-main style=\"padding: 0;\">\r\n      <el-image\r\n        style=\"width: 100%; height: 100vh;\"\r\n        :src=\"require('../assets/image/background.jpg')\"\r\n        fit=\"fill\"></el-image>\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      usernameError: '',\r\n      passwordError: '',\r\n      isLoading: false\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    resetFormErrors() {\r\n      this.usernameError = '';\r\n      this.passwordError = '';\r\n    },\r\n\r\n    handleLogin() {\r\n      if (this.validateForm()) {\r\n        this.login();\r\n      }\r\n    },\r\n\r\n    validateForm() {\r\n      let isValid = true;\r\n      if (!this.username) {\r\n        this.usernameError = '用户名不能为空';\r\n        isValid = false;\r\n      } else {\r\n        this.usernameError = '';\r\n      }\r\n      if (!this.password) {\r\n        this.passwordError = '密码不能为空';\r\n        isValid = false;\r\n      } else {\r\n        this.passwordError = '';\r\n      }\r\n      return isValid;\r\n    },\r\n\r\n    login() {\r\n      this.isLoading = true;\r\n      axios.post(\"http://localhost:8088/login\", {\r\n        username: this.username,\r\n        password: this.password\r\n      })\r\n      .then(response => {\r\n          console.log('登录成功', response.data);\r\n          // 假设这里有一个方法来处理登录成功后的跳转\r\n          this.$router.push('/main');\r\n          localStorage.setItem('token', response.data.token);\r\n        })\r\n      .catch(error => {\r\n          console.error('登录失败', error);\r\n          this.isLoading = false;\r\n          if (error.response && error.response.status === 401) {\r\n            this.passwordError = '用户名或密码错误';\r\n          } else {\r\n            this.passwordError = '登录失败，请稍后重试';\r\n          }\r\n        })\r\n      .finally(() => {\r\n          this.isLoading = false;\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.a1 {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.login-container {\r\n  background-color: white;\r\n  padding: 30px;\r\n  border-radius: 15px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);\r\n  width: 300px;\r\n  max-width: 90%;\r\n  animation: fadeIn 0.5s ease;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(100px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.login-title {\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  color: #666;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n}\r\n\r\n.form-group input {\r\n  width: 90%;\r\n  padding: 12px;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\n.form-group input:focus {\r\n  outline: none;\r\n  border-color: #007BFF;\r\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.2);\r\n}\r\n\r\n.is-invalid {\r\n  border-color: #dc3545;\r\n}\r\n\r\n.invalid-feedback {\r\n  color: #dc3545;\r\n  font-size: 14px;\r\n  margin-top: 5px;\r\n  animation: fadeInError 0.3s ease;\r\n}\r\n\r\n@keyframes fadeInError {\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.login-submit-btn {\r\n  background-color: #007BFF;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.login-submit-btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>"],"mappings":";AAoCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,aAAA;MACAC,aAAA;MACAC,SAAA;IACA;EACA;EAEAC,OAAA;IACAC,gBAAA;MACA,KAAAJ,aAAA;MACA,KAAAC,aAAA;IACA;IAEAI,YAAA;MACA,SAAAC,YAAA;QACA,KAAAC,KAAA;MACA;IACA;IAEAD,aAAA;MACA,IAAAE,OAAA;MACA,UAAAV,QAAA;QACA,KAAAE,aAAA;QACAQ,OAAA;MACA;QACA,KAAAR,aAAA;MACA;MACA,UAAAD,QAAA;QACA,KAAAE,aAAA;QACAO,OAAA;MACA;QACA,KAAAP,aAAA;MACA;MACA,OAAAO,OAAA;IACA;IAEAD,MAAA;MACA,KAAAL,SAAA;MACAN,KAAA,CAAAa,IAAA;QACAX,QAAA,OAAAA,QAAA;QACAC,QAAA,OAAAA;MACA,GACAW,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,SAAAF,QAAA,CAAAd,IAAA;QACA;QACA,KAAAiB,OAAA,CAAAC,IAAA;QACAC,YAAA,CAAAC,OAAA,UAAAN,QAAA,CAAAd,IAAA,CAAAqB,KAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAR,OAAA,CAAAQ,KAAA,SAAAA,KAAA;QACA,KAAAlB,SAAA;QACA,IAAAkB,KAAA,CAAAT,QAAA,IAAAS,KAAA,CAAAT,QAAA,CAAAU,MAAA;UACA,KAAApB,aAAA;QACA;UACA,KAAAA,aAAA;QACA;MACA,GACAqB,OAAA;QACA,KAAApB,SAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}